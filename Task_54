#Task 54: Palindrome Partitioning
def is_palindrome(s):
    return s == s[::-1]

def partition_helper(s, path, result):
    if not s:
        result.append(path)
        return
    for i in range(1, len(s) + 1):
        if is_palindrome(s[:i]):
            partition_helper(s[i:], path + [s[:i]], result)

def partition(s):
    result = []
    partition_helper(s, [], result)
    return result

# Example usage:
s = "aab"
print(partition(s))

[['a', 'a', 'b'], ['aa', 'b']]
