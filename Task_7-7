#Task 7: Personal Budget Advisor
class BudgetAdvisor:
    def __init__(self):
        self.transactions = []

    def add_transaction(self, amount, category):
        self.transactions.append((amount, category))

    def calculate_totals(self):
        income = sum(amount for amount, cat in self.transactions if amount > 0)
        expenses = sum(-amount for amount, cat in self.transactions if amount < 0)
        return income, expenses

    def suggest_savings(self):
        income, expenses = self.calculate_totals()
        if income == 0:
            return "No income recorded. Please add income to analyze budget."
        savings = income - expenses
        advice = "Great! You are saving well. ðŸŽ¯" if savings > 0 else "Try reducing unnecessary expenses. ðŸ“‰"
        return f"Total Income: â‚¹{income}, Total Expenses: â‚¹{expenses}, Savings: â‚¹{savings}. {advice}"

    def display_summary(self):
        print("\nðŸ’° Budget Summary ðŸ’°")
        income, expenses = self.calculate_totals()
        print(f"Total Income: â‚¹{income}")
        print(f"Total Expenses: â‚¹{expenses}")
        print(f"Suggested Advice: {self.suggest_savings()}")

# Example usage:
advisor = BudgetAdvisor()
advisor.add_transaction(50000, "Salary")  # Income
advisor.add_transaction(-15000, "Rent")   # Expense
advisor.add_transaction(-8000, "Groceries")  # Expense
advisor.add_transaction(-3000, "Entertainment")  # Expense
advisor.add_transaction(-5000, "Shopping")  # Expense

advisor.display_summary()

ðŸ’° Budget Summary ðŸ’°
Total Income: â‚¹50000
Total Expenses: â‚¹31000
Suggested Advice: Total Income: â‚¹50000, Total Expenses: â‚¹31000, Savings: â‚¹19000. Great! You are saving well. ðŸŽ¯
